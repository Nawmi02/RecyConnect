# Generated by Django 5.2.6 on 2025-10-04 10:13

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('RecyCon', '0002_alter_product_price'),
        ('Rewards', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight_kg', models.DecimalField(decimal_places=3, help_text='Weight in kilograms for this activity', max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('co2_saved_kg', models.DecimalField(decimal_places=3, default=Decimal('0.000'), help_text='Auto: weight × CO₂ factor (kg)', max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='activities', to='RecyCon.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.SlugField(help_text='Stable code for logic (e.g., first_recycler, pickups_20)', unique=True)),
                ('name', models.CharField(max_length=80, unique=True)),
                ('description', models.TextField(blank=True)),
                ('emoji', models.CharField(blank=True, help_text='Emoji or short icon (multi-codepoint supported)', max_length=16)),
                ('rarity', models.CharField(choices=[('Common', 'Common'), ('Rare', 'Rare'), ('Epic', 'Epic'), ('Legendary', 'Legendary'), ('Exclusive', 'Exclusive')], default='Common', max_length=20)),
                ('points_bonus', models.PositiveIntegerField(default=0, help_text='Extra points awarded with this badge')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-created_at', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Redemption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_spent', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='redemptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='RewardItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('image', models.ImageField(blank=True, null=True, upload_to='reward_items/%Y/%m/')),
                ('cost_points', models.PositiveIntegerField()),
                ('stock', models.PositiveIntegerField(blank=True, help_text='Blank = unlimited', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-created_at', 'title'),
            },
        ),
        migrations.CreateModel(
            name='UserBadge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('awarded_at', models.DateTimeField(auto_now_add=True)),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='awards', to='Rewards.badge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_badges', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-awarded_at',),
            },
        ),
        migrations.DeleteModel(
            name='Reward',
        ),
        migrations.AddField(
            model_name='redemption',
            name='reward',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='redemptions', to='Rewards.rewarditem'),
        ),
        migrations.AddIndex(
            model_name='activity',
            index=models.Index(fields=['user', 'created_at'], name='Rewards_act_user_id_fd2ec3_idx'),
        ),
        migrations.AddIndex(
            model_name='activity',
            index=models.Index(fields=['created_at'], name='Rewards_act_created_d4885f_idx'),
        ),
        migrations.AddIndex(
            model_name='redemption',
            index=models.Index(fields=['user', 'created_at'], name='Rewards_red_user_id_418abe_idx'),
        ),
        migrations.AddIndex(
            model_name='redemption',
            index=models.Index(fields=['reward', 'created_at'], name='Rewards_red_reward__bc0e1e_idx'),
        ),
        migrations.AddIndex(
            model_name='userbadge',
            index=models.Index(fields=['user', 'awarded_at'], name='Rewards_use_user_id_32b537_idx'),
        ),
        migrations.AddIndex(
            model_name='userbadge',
            index=models.Index(fields=['badge', 'awarded_at'], name='Rewards_use_badge_i_af1d17_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userbadge',
            unique_together={('user', 'badge')},
        ),
    ]
